.. note:: 

    こんにちは！SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Communityへようこそ！Raspberry Pi、Arduino、ESP32について、他の愛好者と一緒にさらに深く学んでいきましょう。

    **参加する理由は？**

    - **専門的なサポート**: コミュニティやチームのサポートを受けて、購入後の問題や技術的な課題を解決できます。
    - **学びと共有**: ヒントやチュートリアルを交換して、スキルを向上させましょう。
    - **限定プレビュー**: 新製品の発表や先行情報にいち早くアクセスできます。
    - **特別割引**: 最新製品の特別割引をお楽しみいただけます。
    - **イベントやプレゼント**: プレゼント企画や祝祭プロモーションに参加できます。

    👉 探求と創造の準備はできましたか？[|link_sf_facebook|]をクリックして、今すぐ参加しましょう！

7. サーボの調整（重要）
===================================

.. note::

    Robot HATのバージョンがV44以上（スピーカーが基板の上部にあり、オンボードの **Zero** ボタンがある場合）の場合、このステップをスキップして、 **Zero** ボタンを押すだけでサーボのゼロ設定プログラムを起動できます。

    .. image:: img/robot_hat_v44.png
        :width: 500
        :align: center


サーボの角度範囲は-90〜90ですが、工場で設定されている角度はランダムです。例えば、0°または45°などです。この角度でそのまま組み立ててしまうと、ロボットがコードを実行した後、サーボが不安定になったり、最悪の場合、サーボが動作しなくなったり、焼き付いて故障する原因となります。

そのため、すべてのサーボ角度を0°に設定してから取り付ける必要があります。これにより、どの方向に回転させても、サーボの角度が中央に保たれます。

#. サーボが正しく0°に設定されていることを確認するために、まずサーボアームをサーボシャフトに挿入し、その後、軽くロッカーアームを別の角度に回転させます。このサーボアームは、サーボが回転していることを明確に確認するためのものです。

    .. image:: img/servo_arm.png
        :align: center


#. 次に、 ``examples/`` フォルダ内の ``servo_zeroing.py`` を実行します。

    .. raw:: html

        <run></run>

    .. code-block::

        cd ~/picrawler/examples
        sudo python3 servo_zeroing.py

#. 次に、サーボケーブルをP11ポートに接続します。同時に、サーボアームが位置を回転しているのが見えるはずです（これが0°の位置であり、ランダムな場所なので垂直または平行ではない場合があります）。

    .. image:: img/servo_pin11.jpg


#. サーボアームを外しますが、サーボケーブルは接続されたままで、電源は切らないでください。その後、組み立て手順書に従って組み立てを続けます。

.. note::

    * サーボのネジで固定する前にサーボケーブルを抜かないでください。固定後にケーブルを抜いても構いません。
    * サーボが電源オンの状態で回転しないようにしてください。もしサーボシャフトが正しい角度で挿入されていない場合は、サーボを抜いて再度挿入してください。
    * 各サーボを組み立てる前に、サーボケーブルをPWMピンに接続し、電源を入れてその角度を0°に設定する必要があります。
