.. note::

    Hallo und herzlich willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauchen Sie tiefer in Raspberry Pi, Arduino und ESP32 ein und tauschen Sie sich mit anderen Technikbegeisterten aus.

    **Warum mitmachen?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Probleme nach dem Verkauf und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Tutorials aus, um Ihre F√§higkeiten zu erweitern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und Einblicken.
    - **Exklusive Rabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Verlosungen und Feiertagsaktionen teil.

    üëâ Bereit f√ºr spannende Projekte? Klicken Sie auf [|link_sf_facebook|] und treten Sie noch heute bei!

.. _py_posture:

Anpassung der Haltung
========================

In diesem Beispiel verwenden wir die Tastatur, um die Beine des PiCrawler einzeln zu steuern und die gew√ºnschte Haltung einzunehmen.

Sie k√∂nnen die Leertaste dr√ºcken, um die aktuellen Koordinatenwerte auszudrucken. Diese Werte sind n√ºtzlich, wenn Sie eigene Aktionen f√ºr den PiCrawler erstellen m√∂chten.

.. image:: img/1cood.A.png

**Code ausf√ºhren**

.. raw:: html

    <run></run>

.. code-block::

    cd ~/picrawler/examples
    sudo python3 do_single_leg.py

Nach dem Ausf√ºhren des Codes folgen Sie bitte den Anweisungen im Terminal.

* Dr√ºcken Sie ``1234``, um die Beine einzeln auszuw√§hlen. ``1``: rechtes Vorderbein, ``2``: linkes Vorderbein, ``3``: linkes Hinterbein, ``4``: rechtes Hinterbein.
* Dr√ºcken Sie ``w``, ``a``, ``s``, ``d``, ``r`` und ``f``, um die Koordinaten des PiCrawler schrittweise anzupassen.
* Dr√ºcken Sie ``Ctrl+C``, um das Programm zu beenden.

**Code**

.. code-block:: python

    from picrawler import Picrawler
    from time import sleep
    import readchar

    crawler = Picrawler()
    speed = 80


    manual = '''
    -------- PiCrawler Controller --------- 
           .......          .......
        <=|   2   |‚îå-‚îå‚îê‚îå‚îê-‚îê|   1   |=>
           ``````` ‚îú      ‚î§ ```````
           ....... ‚îú      ‚î§ .......
        <=|   3   |‚îî------‚îò|   4   |=>
           ```````          ```````
        1: Select right front leg
        2: Select left front leg
        3: Select left rear leg
        4: Select right rear leg

        W: Y++          R: Z++             
        A: X--          F: Z--
        S: Y--
        D: X++          Ctrl+C: Quit
    '''
    legs_list = ['right front', 'left front', 'left rear', 'right rear']

    def main():  
        leg = 0
        speed = 80
        step = 2
        print(manual)
        crawler.do_step('stand', speed)
        sleep(0.2)
        coordinate=crawler.current_step_all_leg_value()  

        def show_info():
            print("\033[H\033[J", end='')  # clear terminal windows
            print(manual)   
            print('%s : %s'%(leg+1, legs_list[leg])) 
            print('coordinate: %s'%(coordinate))  

        show_info()

        while True:
            # Eingabe lesen
            key = readchar.readkey()
            key = key.lower()
            # Bein ausw√§hlen
            if key in ('1234'):
                leg = int(key) - 1
                show_info()
            # Bewegung
            elif key in ('wsadrf'):         
                if 'w' == key:
                    coordinate[leg][1]=coordinate[leg][1] + step    
                elif 's' == key:
                    coordinate[leg][1]=coordinate[leg][1] - step           
                elif 'a' == key:
                    coordinate[leg][0]=coordinate[leg][0] - step         
                elif 'd' == key:
                    coordinate[leg][0]=coordinate[leg][0] + step   
                elif 'r' == key:
                    coordinate[leg][2]=coordinate[leg][2] + step         
                elif 'f' == key:
                    coordinate[leg][2]=coordinate[leg][2] - step 

                crawler.do_single_leg(leg,coordinate[leg],speed) 
                sleep(0.1)  
                # coordinate=crawler.current_step_all_leg_value()
                show_info()

            sleep(0.05)


    if __name__ == "__main__":
        main()

* ``current_step_all_leg_value()``: Gibt die Koordinatenwerte aller Beine zur√ºck.
* ``do_single_leg(leg, coordinate[leg], speed)``: Passt die Koordinatenwerte eines einzelnen Beins an.
